from rest_framework import status
from rest_framework.decorators import api_view
from rest_framework.response import Response
from books.models import book, Author, Publisher
from books.serializers import BookSerializer, AuthorSerializer, PublisherSerializer

@api_view(['GET'])
def book_list(request, format=None):
	if request.method == 'GET':
		books = book.objects.all()
		serializer = BookSerializer(books, many=True)
		return Response(serializer.data)
	else:
		return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

@api_view(['POST'])
def book_add(request):
	if request.method == 'POST':
		serializer = BookSerializer(data=request.data)
		authorSerializer = AuthorSerializer(data=request.data)
		publisherSerializer = PublisherSerializer(data=request.data)
		if authorSerializer.is_valid() and publisherSerializer.is_valid() and serializer.is_valid():
			author = Author.object.get()
			publisher = Publisher.object.get() 

		if serializer.is_valid():
			serializer.save()
			return Response(serializer.data, status=status.HTTP_201_CREATED)
		return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

@api_view(['GET'])
def book_details(request, pk, format=None):
	try:
		book = book.object.get(pk=pk)
	except book.DoesNotExist:
		return Response(status=status.HTTP_404_NOT_FOUND)

	if request.method == 'GET':
		serializer = BookSerializer(book)
		return Response(serializer.data)
